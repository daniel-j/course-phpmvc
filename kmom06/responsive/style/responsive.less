/////////////////
// Semantic.gs // for LESS: http://lesscss.org/
/////////////////

// Defaults which you can freely override
@column-width: 60;
@gutter-width: 20;
@columns: 12;

// Utility variable â€” you should never need to modify this
@gridsystem-width: (@column-width*@columns) + (@gutter-width*@columns) * 1px;

// Set @total-width to 100% for a fluid layout
@total-width: @gridsystem-width;

// Uncomment these two lines and the star-hack width/margin lines below to enable sub-pixel fix for IE6 & 7. See http://tylertate.com/blog/2012/01/05/subpixel-rounding.html
// @min-width: 960;
// @correction: 0.5 / @min-width * 100 * 1%;

// The micro clearfix http://nicolasgallagher.com/micro-clearfix-hack/
.clearfix() {
	*zoom:1;
	
	&:before,
	&:after {
	    content:"";
	    display:table;
	}
	&:after {
	    clear:both;
	}
}


//////////
// GRID //
//////////

body {
	width: 100%;
	.clearfix;
}

.row(@columns:@columns) {
	display: block;
	width: @total-width*((@gutter-width + @gridsystem-width)/@gridsystem-width);
	margin: 0 @total-width*(((@gutter-width*.5)/@gridsystem-width)*-1);
	// *width: @total-width*((@gutter-width + @gridsystem-width)/@gridsystem-width)-@correction;
	// *margin: 0 @total-width*(((@gutter-width*.5)/@gridsystem-width)*-1)-@correction;
	.clearfix;
}
.column(@x,@columns:@columns) {
	display: inline;
	float: left;
	width: @total-width*((((@gutter-width+@column-width)*@x)-@gutter-width) / @gridsystem-width);
	margin: 0 @total-width*((@gutter-width*.5)/@gridsystem-width);
	// *width: @total-width*((((@gutter-width+@column-width)*@x)-@gutter-width) / @gridsystem-width)-@correction;
	// *margin: 0 @total-width*((@gutter-width*.5)/@gridsystem-width)-@correction;
}
.push(@offset:1) {
	margin-left: @total-width*(((@gutter-width+@column-width)*@offset) / @gridsystem-width) + @total-width*((@gutter-width*.5)/@gridsystem-width);
}
.pull(@offset:1) {
	margin-right: @total-width*(((@gutter-width+@column-width)*@offset) / @gridsystem-width) + @total-width*((@gutter-width*.5)/@gridsystem-width);
}


//////////
// GRID //
//////////

// Specify the number of columns and set column and gutter widths
@columns: 12;
@column-width: 100%;
@gutter-width: 0;

// Remove the definition below for a pixel-based layout
@total-width: 100%;


////////////
// LAYOUT //
////////////

.border-box() {
	-webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */
	-moz-box-sizing: border-box;    /* Firefox, other Gecko */
	box-sizing: border-box;         /* Opera/IE 8+ */
}

body {
	margin: 0px;
	background-color: #F99;
}

#wrapper {
	max-width: 1000px;
	margin: 0 auto;
	background-color: #9FF;
}

header#top {
	background-color: #9F9;
	padding: 10px;

	h1 {
		margin: 0px;
	}
}

#navigation {
	.column(2);
	background-color: #99F;
}
#maincolumn {
	.column(7);
	background-color: white;
}
#sidebar {
	.column(3);
	background-color: #FF9;
}
#navigation, #maincolumn, #sidebar {
	.border-box;
	padding: 10px;
}

footer#bottom {
	background-color: #F9F;
	clear: left;
	padding: 10px;
}

@media screen and (max-width: 1000px) {
	#navigation {
		.column(12);
		nav ul {
			margin: 0px;
			padding: 0px;

			li {
				display: inline;
				padding-right: 15px;
			}
		}
	}
	#maincolumn {
		.column(8.5);
	}
	#sidebar {
		.column(3.5);
		
	}
}

@media screen and (max-width: 720px) {
	#maincolumn,
	#sidebar {
		.column(12);
	}
}
@media screen and (max-width: 480px) {
	#navigation nav ul {

		li {
			display: block;
			padding-bottom: 15px;
		}
	}
}